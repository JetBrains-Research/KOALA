[versions]
kotlin = "2.0.20"
intellij = "2.1.0"
detekt = "1.23.7"
buildconfig = "3.1.0"
jdk21 = "21"
jdk11 = "11"
kaml = "0.52.0"
serialization = "1.7.3"
snakeyaml = "2.0"
csv = "1.10.0"
joda = "2.12.4"
ktor = "2.3.4"
slf4j = "1.7.35"
changelog = "2.1.2"
postgres = "42.3.1"
logback = "1.4.11"
exposed = "0.44.0"
h2 = "2.2.224"
dataframe = "0.15.0"
opentest4j="1.3.0"

[libraries]
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
snakeyaml = { module = "org.snakeyaml:snakeyaml-engine", version.ref = "snakeyaml" }
csv = { module = "org.apache.commons:commons-csv", version.ref = "csv" }
joda = { module = "joda-time:joda-time", version.ref = "joda" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
dataframe = {module = "org.jetbrains.kotlinx:dataframe", version.ref = "dataframe"}
opentest4j = { module = "org.opentest4j:opentest4j", version.ref = "opentest4j" }
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

slf4j = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }


[plugins]
intellij = { id = "org.jetbrains.intellij.platform", version.ref = "intellij" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
changelog = { id = "org.jetbrains.changelog", version.ref = "changelog" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
dataframe = {id = "org.jetbrains.kotlinx.dataframe", version.ref = "dataframe"}